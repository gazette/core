// Code generated by mockery v1.0.0
package consensus

import client "github.com/coreos/etcd/client"
import context "golang.org/x/net/context"
import mock "github.com/stretchr/testify/mock"

// MockWatcher is an autogenerated mock type for the Watcher type
type MockWatcher struct {
	mock.Mock
}

// Next provides a mock function with given fields: _a0
func (_m *MockWatcher) Next(_a0 context.Context) (*client.Response, error) {
	ret := _m.Called(_a0)

	var r0 *client.Response
	if rf, ok := ret.Get(0).(func(context.Context) *client.Response); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*client.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
